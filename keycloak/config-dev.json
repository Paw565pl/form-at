{
  "id": "360b45af-3630-4553-848c-3f93a6a18b30",
  "realm": "form-at",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": false,
  "rememberMe": true,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": true,
  "permanentLockout": true,
  "maxTemporaryLockouts": 1,
  "bruteForceStrategy": "MULTIPLE",
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "ee83df7a-e7cc-4506-9c2d-f3389b526d2d",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "360b45af-3630-4553-848c-3f93a6a18b30",
        "attributes": {}
      },
      {
        "id": "0ffa92dd-8fb9-4d87-b5b9-32a17f4e9e71",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "360b45af-3630-4553-848c-3f93a6a18b30",
        "attributes": {}
      },
      {
        "id": "947d0ada-6dc6-45b4-80eb-c08238e5e4e2",
        "name": "default-roles-form-at",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "account": ["view-profile", "manage-account"]
          }
        },
        "clientRole": false,
        "containerId": "360b45af-3630-4553-848c-3f93a6a18b30",
        "attributes": {}
      },
      {
        "id": "ebf37039-353c-4c16-a21c-0894c6c189ce",
        "name": "admin",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "360b45af-3630-4553-848c-3f93a6a18b30",
        "attributes": {}
      }
    ],
    "client": {
      "spring-boot-backend": [],
      "realm-management": [
        {
          "id": "3b2cb484-5897-4508-ae70-f88818a42491",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-clients",
                "query-groups",
                "view-realm",
                "manage-identity-providers",
                "manage-users",
                "view-users",
                "manage-events",
                "impersonation",
                "view-clients",
                "create-client",
                "view-identity-providers",
                "query-realms",
                "query-clients",
                "manage-realm",
                "view-authorization",
                "view-events",
                "query-users",
                "manage-authorization"
              ]
            }
          },
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "bdfa75a6-a7f1-450d-a93d-edb0b3843112",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "7f0eacf9-236a-456b-abad-54034e5891e2",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "9c404c1b-8480-4012-a45d-828e3ac301e7",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "261b705f-ac9b-4c3c-9d9c-36c1425deebf",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "e758cd22-7bec-41b5-b6c3-ff74acb9e003",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "43a7d0db-efb0-4156-b5d0-3348acd6810b",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-groups", "query-users"]
            }
          },
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "9f3a40eb-35e6-49a6-9b10-66b953c7ffa3",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "813447e9-d01c-4f3e-a862-f17a1dd64c90",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "9ba881ba-ed73-4756-9928-891493766e9f",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "6b984aee-75d7-402c-9ee3-7f3914afe53a",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "551eb953-4dec-4873-aa0a-4d660979b606",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "01eeb0c7-2624-433e-8c5d-378c92c14fb5",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "8ca64554-df46-491a-b628-fc07c8c9e6bf",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "64aaae4b-53c5-4d8e-a16f-4e5f761782b0",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "1b28202b-d126-441d-83c1-ef24eb4cd3c4",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "f638021e-01b6-49a6-869a-efd1494bce0d",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "db6ad64c-dbd8-4153-a37b-fb076baa4a4e",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        },
        {
          "id": "db496224-fc2d-410c-ba5e-b3d91b40bfee",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "8e1c23d3-4bcf-4407-89ef-77b4b5449b5e",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "8753b7e0-a24e-450c-a322-8f1cd132105e",
          "attributes": {}
        }
      ],
      "next-js-frontend": [],
      "account": [
        {
          "id": "518849d9-d55a-4fb1-abae-086a80e75601",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "d3670021-5283-46ac-a5f2-1174df2269fe",
          "attributes": {}
        },
        {
          "id": "bbad50fa-dc2e-4841-8995-c901e6ed10ce",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "d3670021-5283-46ac-a5f2-1174df2269fe",
          "attributes": {}
        },
        {
          "id": "ef0a831c-0d18-4395-a23d-ddd788e5bd66",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "d3670021-5283-46ac-a5f2-1174df2269fe",
          "attributes": {}
        },
        {
          "id": "00a0476d-3352-4b7f-9ea0-bd86d1d64d05",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "d3670021-5283-46ac-a5f2-1174df2269fe",
          "attributes": {}
        },
        {
          "id": "1f1f7d02-f9c1-4c6a-a51a-aad97a183d37",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "d3670021-5283-46ac-a5f2-1174df2269fe",
          "attributes": {}
        },
        {
          "id": "4d8661ca-6838-4519-b631-0a65e86ae9f5",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "d3670021-5283-46ac-a5f2-1174df2269fe",
          "attributes": {}
        },
        {
          "id": "175657b2-ba1a-4ca7-b3b5-993788f931fa",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "d3670021-5283-46ac-a5f2-1174df2269fe",
          "attributes": {}
        },
        {
          "id": "23ed3ccc-638c-492a-b729-d4ca0e2ca4ad",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "d3670021-5283-46ac-a5f2-1174df2269fe",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "947d0ada-6dc6-45b4-80eb-c08238e5e4e2",
    "name": "default-roles-form-at",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "360b45af-3630-4553-848c-3f93a6a18b30"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256", "RS256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256", "RS256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "Yes",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "required",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "56ca468f-f0f2-4707-bd34-5dc139e8e07d",
      "username": "admin",
      "email": "admin@local.dev",
      "emailVerified": false,
      "enabled": true,
      "createdTimestamp": 1761057870807,
      "totp": false,
      "credentials": [
        {
          "id": "df88b0e1-3667-4e37-ab67-e2402c3673e4",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1761057885825,
          "secretData": "{\"value\":\"hu0okdmA7jbof+/L9dEB15ZWfU5oKpbJzNbGkHwafC0=\",\"salt\":\"ujavZ0uzF/V5H5yVroS4sg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-form-at", "admin"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "8075272c-48fb-46ff-aed8-946853230459",
      "username": "test",
      "email": "test@local.dev",
      "emailVerified": false,
      "enabled": true,
      "createdTimestamp": 1761057839061,
      "totp": false,
      "credentials": [
        {
          "id": "bfea45c3-422c-4ea0-83c0-3fcc260e9197",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1761057856519,
          "secretData": "{\"value\":\"5m90tMHftyLhXJRmLwaDKXTm4Cbnwc8F4oPxke72Q18=\",\"salt\":\"ThRbbb1gZ8d4niH0BH+qBA==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-form-at"],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "d3670021-5283-46ac-a5f2-1174df2269fe",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/form-at/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/form-at/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "621bce7b-4a02-485b-8803-317b848ae8e4",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/form-at/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/form-at/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "d6dc655d-5a99-4fee-8c47-0c796e49e077",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "8313b62a-7afe-4691-a912-e9f698630885",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "8753b7e0-a24e-450c-a322-8f1cd132105e",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "99ec241e-19a5-4e5e-b1af-9f5d0c4521ad",
      "clientId": "next-js-frontend",
      "name": "",
      "description": "",
      "rootUrl": "http://localhost:3000",
      "adminUrl": "http://localhost:3000",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "nextjsfrontendsecret",
      "redirectUris": ["http://localhost:3000/api/auth/callback/keycloak"],
      "webOrigins": ["http://localhost:3000"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1761058360",
        "backchannel.logout.session.required": "true",
        "standard.token.exchange.enabled": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "pkce.code.challenge.method": "S256",
        "backchannel.logout.revoke.offline.tokens": "false",
        "dpop.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "9ec4b274-b1d6-44c2-805c-0751f8087a11",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "29fdb011-707b-442b-88d7-75c9d0829bef",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/form-at/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/form-at/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "55ec1261-947e-49a3-9c4f-b757a6aa9858",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c14df18d-ed9f-4b54-a09b-d44b577bc08e",
      "clientId": "spring-boot-backend",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/*"],
      "webOrigins": ["/*"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "standard.token.exchange.enabled": "false",
        "frontchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "pkce.code.challenge.method": "S256",
        "backchannel.logout.revoke.offline.tokens": "false",
        "dpop.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "50c591b3-27c2-47f0-b7ca-672f1737b87c",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "569027f2-fddd-47c4-963c-75c1b74b833f",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "e3aec06d-ed2d-4424-995b-46832afadc1d",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "63223b05-8385-4e83-8e15-7f3613673a43",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "53353fb3-6667-4290-98a8-1b8d1e1cac7c",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "9264b8ab-03ba-4569-bb63-efdaf7e43797",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "6f9618b6-d0d9-49f5-921d-fdb091ba4937",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "f8852d47-7d10-42ac-bb95-61520bc4d54e",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "06ffe6e8-093e-47ba-8fb4-53c495035b61",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4a029b4b-633d-4231-a96c-aa4e9fa30745",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "6514731a-c939-4e88-80f9-27f2a432d565",
      "name": "saml_organization",
      "description": "Organization Membership",
      "protocol": "saml",
      "attributes": {
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "dcb7b6b4-a9d5-4cbd-a880-dbd06c8cc0e0",
          "name": "organization",
          "protocol": "saml",
          "protocolMapper": "saml-organization-membership-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "7894d0f7-0503-4afc-ba5a-75659be46262",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b96a10fc-9e55-4a75-8967-9fbea7531ed2",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dd150e1e-1b1c-45a4-b23e-86d1c8341fff",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "06490776-0d5f-4c07-b11e-b121acc46145",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "397eb633-549a-433f-9992-e9e011eb7d76",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "513f0a53-ff30-41ff-a04e-8d448afe47a8",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5dc62f51-efe8-4a6a-bc36-b4ca9ae588b1",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "5b0d85a6-e4a6-4d3f-be9c-d9228137ab6e",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4d94023e-4d8c-4a68-b4ce-70bff1da1331",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5b1a0ec8-561b-486c-b4d9-5c8bb780468a",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "9a6c46c7-c32c-4ce3-aecb-746e4847d89e",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7d923836-4277-4404-9a36-f6dd2a7fae2b",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "02846974-878d-4e77-b0b7-224f488e67c1",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3bc720fa-ca87-4c32-afd7-fffcb6a65aea",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "86bf59c8-fd64-44c4-b209-9e2de8827771",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "712cda6d-2cf3-41cf-a87c-34de83e2a056",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "b904e460-f9f4-4c2c-b39a-bc2559e8fb93",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "664ac835-d1c1-4514-8df8-0c829c318870",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "c555a465-c604-4067-b602-2075b11a6d4d",
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "9635d66d-68d2-4d87-ba6a-de93dce5afaa",
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "3a35aa7a-5171-49be-9bed-82a9e9bdf3bb",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "2ab7228f-edeb-47d1-b846-943aab7b52eb",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c8be45d8-f063-4c3b-83f8-b6a5b3f972fe",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "f692379e-d6dd-4de2-b83f-e3c2559cf72c",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "21f706eb-615c-4433-8dc5-6b238f4564fc",
          "name": "spring boot backend audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "spring-boot-backend",
            "id.token.claim": "true",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "introspection.token.claim": "true"
          }
        },
        {
          "id": "47b9012a-74f3-4221-b984-eed951ba0982",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "false",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6e71dc6b-8ad3-40ff-a32b-24f36166b43d",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "e502048a-f066-485a-b345-68789fcfe4c1",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "false",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "901affdb-1700-4b05-b5b6-7fdfe48e4669",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "d5b4fe7c-b015-422b-b3a8-ab3f788890ef",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        },
        {
          "id": "a9cfca1e-8d02-4488-b87b-64ab1d5fabc3",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "77a49e99-57cf-4b76-95d4-5cd2d619b96c",
      "name": "service_account",
      "description": "Specific scope for a client enabled for service accounts",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "df0d3a08-9a62-40a7-aebc-b5c674e85c3b",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f9e4d73b-2600-4d4b-ab8d-4af48be812f8",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "27d7f76e-1cc9-4e68-9a01-31238f6323e6",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "6f675f88-d960-442b-9db8-4543612aaffe",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "ea63dc92-43c1-4cab-9349-3f92ec139ed5",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "saml_organization",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt",
    "organization"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "e03bbb07-1bd9-4067-a621-b65d76af502a",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "1f6262e3-b2ff-4f25-95cb-b38ceab398dd",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "7d6087c4-921c-43df-b398-ac0e789865ca",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "6d81e55f-7b16-43dc-8f94-6d6bfbf39547",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "4bfbd55b-a1ef-4f1a-90f5-2d840fec5139",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "d0225a0c-0bba-44d6-86b7-f39aebac91e9",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "48a2ff87-5528-4901-a298-0558cce6ff65",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      },
      {
        "id": "f56f22f3-1858-451c-bcde-5ab9f49bd9f2",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "bb2881ef-c1f1-4a09-a429-9f9cab684f46",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {
          "kc.user.profile.config": [
            "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "c4725e4d-e02c-41ff-80b3-c7ed4bd544f0",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["f643799a-610e-4081-88c6-6d0dc34d51ec"],
          "secret": [
            "2u72y-5qr_aWJS6PRg-Dm1W6dV-KnHI0pBUHyRMXNokI8QvfDKRP8KdpXvlz0-C73AWJL2zPum-UyKS7O4KCzLsoF4smHUd9f0oloN7oyhVQHpNXRsoJMAUO6d77L5YElhPwbo7tKhxWCwoy5Pm9sq-STYSOeUrAv_3o8Iwl7cY"
          ],
          "priority": ["100"],
          "algorithm": ["HS512"]
        }
      },
      {
        "id": "7b848e46-4d7a-49b8-8287-f16d329bedd0",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["b11773da-47ac-461a-bb93-582d6a1fce8d"],
          "secret": ["N63yIYkcJyAttz7HulPzmA"],
          "priority": ["100"]
        }
      },
      {
        "id": "d62e43c7-198a-4eb1-90f0-530ea030b892",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAvXgeFPKb0GazxOEyM9K75stPNRpiuRb6J1XXsqKtVsCghyuxSEkrljVotobfsmy7neCA2zMy2x5m1AFCQElmQZgoQLZNq8fdBOTa3OVp3PtdSn6CmJs9G5b+wOZlfcl7Erd2KO7vom9swoUP76QYo8z1k4CiwKzdX3WPtp7T1bBkhPUV3KgzWv2/t7RPnL6NtMpGKj0zr3wPVK3zL7x/VvbiVaK0yELYyMIhv/4Lr+bPFtEvhjqWf4ebp8DvqVxQb3yRwH82I4xE6CXZnE+3H5YbbDMUge1E//gPUT1g10aBSmS/+h+uqfHddSZvaZwxABol5TgawtyStZBWI4JsMwIDAQABAoIBACVX6G3uh2Fi7KmwTQnDzj8l8T2hLrYWXkWkeLf/sjR4EOuzY+TAbzPS4QmgubRcE/qBBkSt6acgbdn5SYqMLPheughPJi3mXZyaUrzZBq2EaZXGK41Sg4/NifaRMo3BSV2eBU76EQct+Py55zMvX5/hRMHGx808BQHMlP/EfDIQk6EIf+cyYBre36h++LPdkjRQ0XbtsHkmQU2Jv+P8oJC1Pmct3rLwLt3DlyKkaaD4pxgPOwKy9MC3lXRxBmvm6tQSglV6IyQNoesBf988Bn9jsUUbX7uVWHIXWVU9rWmUYXoqItpxqXFgj2Ey+W3Dq997y6JzTPP0QGIJJvSp4FECgYEA+uvvEmIW3bcVO264Cxg+c6BVaPoVvq9kmm6IXvB1jbYu7sAaBqamnHU8k4Ux+hfEGRaDfyQemEZoPj422EvX1PDb49PCVukz00i2ZGMOFnJ/voyKnUmba6qGtWzAlacm57LiA/hogaUdM0i8WWenR5puUAAo0hnCZ93rWj8qtykCgYEAwU3J4m1NqsHf8cv0pz0MTIp6LgjAT9LKh96ne61SJn+CTk5wNNLujBQNfroLBx9QeKrlzBdkmbBJW4x9h2ICeeO3hcCScomgFutLLAm2hkTqbmCvkGQJ3cjK4l+K3zhA1cVW6iIrKHCgFxUzE4QBhg/hzMXyBfH96zfatoeX//sCgYBardDkD9a7oWJm7AhO2iAXoSW8nkQleTUeKjvWM4gIAoLLfVjqdmdXu3Z8yXHaM6SGfIBg/iigVzFs7Qbc++uv5KtSlkBxMC2ueWSQustoiVBpCFk/pk4ohqPQBNFEQ/fnW9oaHTeHQqhe1DZdCPyG/+RFvQkDhJOg/a4EGzfQoQKBgQCuouBpN+abBlyTzndRP84EuHZ5cF6NvxpKddVJ3uQA8+F9bU/h6U6qLtOiUeH0pU3GNl81a0zvrFwZ4WrnDJzAEgKTS88Cu2NuUVSwjHXiCBDjd2YlRLvFKspgiYCk+eVZO9ex3vyupFF9iSGD2BaoT2Dn500oIeAMyYFGtmmUUQKBgQDYRO3U1j8pjhhjaohezfpKViZiUHkF6lFkaIITyG8MomWxROheDW+6jlPuR95AzVZROsZ6tZd8jjooZL8znYW7jMppHREQEcSAJJlv4NbJDvK5999MirUkyffvzJc2tRwuOvXTykqyYBQDvIq1f0kXAdd4Xc/PBSMdmHu3zC2+pA=="
          ],
          "keyUse": ["SIG"],
          "certificate": [
            "MIICnTCCAYUCBgGaBzU0CjANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdmb3JtLWF0MB4XDTI1MTAyMTE0MzY1OFoXDTM1MTAyMTE0MzgzOFowEjEQMA4GA1UEAwwHZm9ybS1hdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL14HhTym9Bms8ThMjPSu+bLTzUaYrkW+idV17KirVbAoIcrsUhJK5Y1aLaG37Jsu53ggNszMtseZtQBQkBJZkGYKEC2TavH3QTk2tzladz7XUp+gpibPRuW/sDmZX3JexK3diju76JvbMKFD++kGKPM9ZOAosCs3V91j7ae09WwZIT1FdyoM1r9v7e0T5y+jbTKRio9M698D1St8y+8f1b24lWitMhC2MjCIb/+C6/mzxbRL4Y6ln+Hm6fA76lcUG98kcB/NiOMROgl2ZxPtx+WG2wzFIHtRP/4D1E9YNdGgUpkv/ofrqnx3XUmb2mcMQAaJeU4GsLckrWQViOCbDMCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAIBnjRB+4HthLmkSuXlkZpdn66YhyqdTTZocTSu9xHUbsP+NKHhYuSOSVJcYNIGDehOGMGroDpRgNFqwGIjDNh/YWSLbZ0jzwSRKHgUenhrR8CH2C8QBZyfWeseZR6esJn4QoIhgn9zMhyS2kr0sftCTSEtegD2l6Mhb6GIfKo/4jeb1Przjn6lsHfqVaKABjxfjia8g/JZC2wKx5JCQN1Gldv9D4VwqCedqEU79NLim1dp2SqMa+8rQ57vgo3D6MWppi1NCikl4A01NLUSg/1PWH8y8oOrwrtfqTPjXD7g5AZWi74rodvZxQ9WGTwPPxufq9tdKomUORQeJTde6xYg=="
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "18d8e925-d979-442a-8385-716fc5b48ed8",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEogIBAAKCAQEA0QE4Rzh7LMy4glLgeRNJx+IsZkXc2F98CP0Ik76MywQUU+6fdUjPDiYVBsftyKzDPlaYoS9HJ9GlOWNJ571h9CcTNFR5j2J7s5FB/g9yrB078mrCECUy0R89LnUrhdHTQrXUIYe8Mh7BX1arjUR7ASLLz1BkYopL9pH8Jng3ouPnlbnjT6oO+Fsr/0s9evM/xh2Cd55CooqkIITdHR2ZpPDcY/1AIQ2bDxMiVl2oPQ9QtyBAcf14GMcjeX7lDCq5AdOqCB3z2LUcF9C0CuEDfl9bhf58iO272/HGdbZnkIQmWg3T4MgaOoImHm9tn3dL9t+Je+4ChRtOmfxdKD0sowIDAQABAoIBAEGw3vXvqDNcAxAfKWOUruduzKK2iaPOWydeFHCPfyQeG5+HzEGqST36tTgk5bVhq5ov0Jg0ymoXCBXiAawfR6bcEzqq5GwvOY8mdDX8t/+lzp4ydN1rO64j4fB0rmHIodyBVvPU/E9KgF/NV2023Wxted6mt26LZjXRC44x0dbVto3YZp18yhnoueFB6OTYf2UEnejDEAh8vNwgZBnLMZTpGy595mOIWTprK/vif+VR496DeaiYoqdUC/Ix6Lt67dgZ88ODiqYNjFgKT6FKK2jBNCQrpUEugfrJxhe03sop1+6sM9P0C4PZ9OYRGZ1sOsHEkkHD+YVUI2K58YC2lMUCgYEA7peCX773gMLVX/GKC4KeAINOMnaaZOmMJpLywXA7R28ieQjRqvfReLyNZYCWJ62+63wugMorTPnS5Eo2TxT1DVRWllT6TtjYCjcFc8M6gFybWvg6HxLhygzDs+LbuDqa3Subah3V00Br28O+lNH23Lr+4tg1+ZAKHDfebxYfI80CgYEA4EETBoo/nPvNcpi3O3F7vXloAULXQHaTNPS9SWPHREiAfnEiyPmAeqbUYKlUmETF5PrS009HlGfqus3Mpcgi4avQNcpZ4ok1y5VvLoM+4M2oOgdvOjYDjbjjFTvG/IaqPkHG8vDZ4zSa5rlkks0eTNIPirQFi6DwgIbM8IE2Ai8CgYBzD2PTMq//S3ZFJ6GP/XSfALOUSHgalDp/W7xwJuSfhWvVfLhIP+yn0h5KReGjzvlUbPWsLFMHcy8N4vAf4RZwUCzVoLN5lL9S5cfeVNcAkihljXHSDHQQ0WkLdirJxJFseZwgZ7T3hIi/Wb2t3Te0qQVEdkpJSPpnM1Y0sjFgPQKBgD1y12nFXCUCAovSOPM653NF3y/pRt5NH401OuDvTFzzmPIMwkFbzM7PBAbwn1OSFL/n0vlAEhciWnmRhvAuZRB9afIzXmnquyjr66lNIV+sOtqbyuiigFrHPMJGvQHZTLD+iStsv+e4NHHgfySSvCjErqmNJq/aC8zMI0ALx+bVAoGAJUHyzgJ6LIr2oL4rcR/evkxF8Uj3CasGHgu3KV+Xym/jD58+Y5KVgXMgVRtEW5shmF3Wsq0UOf9FT/DtTznKW/dQh8Ow9ip6xpJRcLavTLnXzlIhs22U1Oj+GYDrW017f79fOVHy7kbEo0v/C0Guz9SDKvjfzGcI6Cd94TufvrE="
          ],
          "keyUse": ["ENC"],
          "certificate": [
            "MIICnTCCAYUCBgGaBzU0ejANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdmb3JtLWF0MB4XDTI1MTAyMTE0MzY1OFoXDTM1MTAyMTE0MzgzOFowEjEQMA4GA1UEAwwHZm9ybS1hdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANEBOEc4eyzMuIJS4HkTScfiLGZF3NhffAj9CJO+jMsEFFPun3VIzw4mFQbH7ciswz5WmKEvRyfRpTljSee9YfQnEzRUeY9ie7ORQf4PcqwdO/JqwhAlMtEfPS51K4XR00K11CGHvDIewV9Wq41EewEiy89QZGKKS/aR/CZ4N6Lj55W540+qDvhbK/9LPXrzP8YdgneeQqKKpCCE3R0dmaTw3GP9QCENmw8TIlZdqD0PULcgQHH9eBjHI3l+5QwquQHTqggd89i1HBfQtArhA35fW4X+fIjtu9vxxnW2Z5CEJloN0+DIGjqCJh5vbZ93S/bfiXvuAoUbTpn8XSg9LKMCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAEf5C2McG6STKxBhsbUA3ACrBYcBgTJDMLJE5wRiUDIEODKFcFPPhbL3cvuDJO/hFCuKIfJ8O2Pwn+kt9Ysb3VCl/6epJjsJe5b1ilPg+8NV5m/H6sxq3dN9CG2p8haTC4gKOQE0x82/0n+dVVhl+MjO3o8tADR79aD8digAv+fIhDRV37V/MlhpxRU4vFgA6v2lZFALxjIyGLyZP3B+iGpa/EqRVL4jF4ht/SVVKLXiEx+viw9vKrOTC8arfwJPSRjrUWljBprlcVsx+COfeKq7OqDJJGzK2eQ3aGtsivyVO7U8uLSifCUS/t42TiOR/v7kWY0Hw15wWa2kllCwXcw=="
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      }
    ]
  },
  "internationalizationEnabled": true,
  "supportedLocales": ["en", "pl"],
  "defaultLocale": "en",
  "authenticationFlows": [
    {
      "id": "8716b986-a982-46a0-8839-3ee2745a7e6a",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fd4943d5-5220-48d4-96ee-f7a8c6a6e5d6",
      "alias": "Browser - Conditional 2FA",
      "description": "Flow to determine if any 2FA is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "browser-conditional-credential",
          "authenticator": "conditional-credential",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "webauthn-authenticator",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-recovery-authn-code-form",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6a9fb2ba-2d1f-4722-9541-86b2f4c9723e",
      "alias": "Browser - Conditional Organization",
      "description": "Flow to determine if the organization identity-first login is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "organization",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "df65ea57-bb7d-4bc5-ae9a-adadb058abba",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "606f44b5-c24e-40a4-965c-919e703071aa",
      "alias": "First Broker Login - Conditional Organization",
      "description": "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-add-organization-member",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4bdb128a-5301-48e1-8c0a-77ad58c73fce",
      "alias": "First broker login - Conditional 2FA",
      "description": "Flow to determine if any 2FA is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "first-broker-login-conditional-credential",
          "authenticator": "conditional-credential",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "webauthn-authenticator",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-recovery-authn-code-form",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cf7e489d-ab43-4c8f-a293-8f60d4b9bb7a",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4bd2fa9d-a1c5-45ae-978f-eaeaa0850e40",
      "alias": "Organization",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6709f6c4-c953-4038-be3e-393e71d9dd9c",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "03ca5052-979b-4f23-88b2-647794512296",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "43c74ce8-474b-41cb-a540-518331c460d4",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional 2FA",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7ae89cfb-41de-4a73-bea8-4d9a323197e8",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 26,
          "autheticatorFlow": true,
          "flowAlias": "Organization",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9c6e1907-34c1-4171-a365-2dfef6cdcc99",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5a3cc389-4382-4588-8f59-22809125698d",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "85e934a3-6646-4ece-8ef1-a0277cb92623",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c8f79d4d-029f-4a38-a55e-3f1ef5d889ef",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 60,
          "autheticatorFlow": true,
          "flowAlias": "First Broker Login - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "135b0836-0815-4cee-b39e-61c6ccc91924",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional 2FA",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ebe44578-95f9-4e62-9c8f-c84f7e04def5",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "85766c5f-58e0-4d81-a4ab-894d12d929b0",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9e9107ac-3de6-401f-aa4a-0e34c75c1823",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "36782de9-936d-45f1-a08a-68ecdd4550b5",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "17e5e208-6df2-423a-8a62-6613e5ce36cd",
      "alias": "browser-conditional-credential",
      "config": {
        "credentials": "webauthn-passwordless"
      }
    },
    {
      "id": "539b7b99-663c-412c-8871-45ea85f98b99",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "1e69ecb8-6379-4ca9-81a6-d9f89bf7e1b7",
      "alias": "first-broker-login-conditional-credential",
      "config": {
        "credentials": "webauthn-passwordless"
      }
    },
    {
      "id": "8b8c160f-7446-45b2-a2df-9152b4dbfb47",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "UPDATE_EMAIL",
      "name": "Update Email",
      "providerId": "UPDATE_EMAIL",
      "enabled": false,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 110,
      "config": {}
    },
    {
      "alias": "idp_link",
      "name": "Linking Identity Provider",
      "providerId": "idp_link",
      "enabled": true,
      "defaultAction": false,
      "priority": 120,
      "config": {}
    },
    {
      "alias": "CONFIGURE_RECOVERY_AUTHN_CODES",
      "name": "Recovery Authentication Codes",
      "providerId": "CONFIGURE_RECOVERY_AUTHN_CODES",
      "enabled": true,
      "defaultAction": false,
      "priority": 130,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "26.4.1",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "verifiableCredentialsEnabled": false,
  "adminPermissionsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
